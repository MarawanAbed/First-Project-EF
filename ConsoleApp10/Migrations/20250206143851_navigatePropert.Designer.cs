// <auto-generated />
using ConsoleApp10.Dal.Database;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace ConsoleApp10.Migrations
{
    [DbContext(typeof(ApplicationDbContext))]
    [Migration("20250206143851_navigatePropert")]
    partial class navigatePropert
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "9.0.1")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("ConsoleApp10.Dal.Entity.Department", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("Id"));

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("departments");
                });

            modelBuilder.Entity("ConsoleApp10.Dal.Entity.Empolyee", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("Id"));

                    b.Property<string>("Address")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<long>("DepartmentId")
                        .HasColumnType("bigint");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("DepartmentId");

                    b.ToTable("empolyees");
                });

            modelBuilder.Entity("ConsoleApp10.Dal.Entity.Project", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("Id"));

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("projects");
                });

            modelBuilder.Entity("ConsoleApp10.Dal.Entity.WorkFor", b =>
                {
                    b.Property<long>("EmpolyeeId")
                        .HasColumnType("bigint");

                    b.Property<long>("ProjectId")
                        .HasColumnType("bigint");

                    b.HasKey("EmpolyeeId", "ProjectId");

                    b.HasIndex("ProjectId");

                    b.ToTable("workFors");
                });

            modelBuilder.Entity("EmpolyeeProject", b =>
                {
                    b.Property<long>("EmpolyeesId")
                        .HasColumnType("bigint");

                    b.Property<long>("ProjectsId")
                        .HasColumnType("bigint");

                    b.HasKey("EmpolyeesId", "ProjectsId");

                    b.HasIndex("ProjectsId");

                    b.ToTable("EmpolyeeProject");
                });

            modelBuilder.Entity("ConsoleApp10.Dal.Entity.Empolyee", b =>
                {
                    b.HasOne("ConsoleApp10.Dal.Entity.Department", "Departments")
                        .WithMany("Empolyees")
                        .HasForeignKey("DepartmentId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Departments");
                });

            modelBuilder.Entity("ConsoleApp10.Dal.Entity.WorkFor", b =>
                {
                    b.HasOne("ConsoleApp10.Dal.Entity.Empolyee", "Empolyee")
                        .WithMany()
                        .HasForeignKey("EmpolyeeId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("ConsoleApp10.Dal.Entity.Project", "Project")
                        .WithMany()
                        .HasForeignKey("ProjectId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Empolyee");

                    b.Navigation("Project");
                });

            modelBuilder.Entity("EmpolyeeProject", b =>
                {
                    b.HasOne("ConsoleApp10.Dal.Entity.Empolyee", null)
                        .WithMany()
                        .HasForeignKey("EmpolyeesId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("ConsoleApp10.Dal.Entity.Project", null)
                        .WithMany()
                        .HasForeignKey("ProjectsId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("ConsoleApp10.Dal.Entity.Department", b =>
                {
                    b.Navigation("Empolyees");
                });
#pragma warning restore 612, 618
        }
    }
}
